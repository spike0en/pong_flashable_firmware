#!/sbin/sh
# Functions needed early
ui_print() { $BOOTMODE && echo "$1" || echo -e "ui_print $1\nui_print" >> $OUTFD; }
abort() { ui_print "$1"; ui_print " "; exit 1; }

# Set vars
OUTFD=/proc/self/fd/$2
ZIPFILE="$3"
tmp=/dev/tmp

chooseport() {
  while true; do
    getevent -lc 1 2>&1 | grep VOLUME | grep " DOWN" > $tmp/events
    if (`cat $tmp/events 2>/dev/null | grep VOLUME >/dev/null`); then
      break
    fi
  done
  if (`cat $tmp/events 2>/dev/null | grep VOLUMEUP >/dev/null`); then
    return 0
  else
    return 1
  fi
}

# Detect Magisk Manager/booted flashing
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true || BOOTMODE=false
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true
$BOOTMODE && abort "You need to flash this from Orangefox Recovery!"

set -x
rm -rf $tmp
mkdir -p $tmp
unzip -o "$ZIPFILE" -d $tmp || abort "Failed to extract zip!"
sleep 1

ui_print " "
ui_print "========================================="
ui_print " Nothing Phone (2) Firmware Flasher"
ui_print "========================================="
ui_print " Device: Nothing Phone 2 (Pong)"
ui_print " Target FW Build: Check filename"
ui_print " "
ui_print " Based on script by Wishmasterflo,"
ui_print " Modified and adapted by spike0en."
ui_print "========================================="
ui_print " "
ui_print "Continue? Vol+ yes, Vol- no"
chooseport && flash=true || exit 0

# Function to flash a partition to both slots, prompting on error
flash_partition() {
  local partition_name=$1
  local image_file=$2
  local partition_path_a="/dev/block/bootdevice/by-name/${partition_name}_a"
  local partition_path_b="/dev/block/bootdevice/by-name/${partition_name}_b"
  local source_image="$tmp/firmware-update/$image_file"

  ui_print " "
  ui_print "Processing $partition_name..."

  # Check if image file exists
  if [ ! -f "$source_image" ]; then
    ui_print "--> Error: Image file $source_image not found for $partition_name!"
    ui_print "    Press Vol+ to skip flashing this partition and continue,"
    ui_print "    Press Vol- to abort the entire script."
    chooseport
    if [ $? -ne 0 ]; then
      abort "Aborting script due to missing image file and user choice."
    else
      ui_print "--> Skipping $partition_name due to missing image, continuing..."
      return 0
  fi

  # Flash Slot A
  ui_print "  Flashing $partition_name to slot A..."
  dd if="$source_image" of="$partition_path_a" bs=4k
  if [ $? -ne 0 ]; then
    ui_print "--> Error flashing $partition_name to slot A!"
    ui_print "    Press Vol+ to skip flashing this partition and continue,"
    ui_print "    Press Vol- to abort the entire script."
    chooseport
    if [ $? -ne 0 ]; then
      abort "Aborting script due to slot A error and user choice."
    else
      ui_print "--> Continuing to flashing the next partition despite slot A error..."
      return 0
    fi
  fi

  # Flash Slot B
  ui_print "  Flashing $partition_name to slot B..."
  dd if="$source_image" of="$partition_path_b" bs=4k
  if [ $? -ne 0 ]; then
    ui_print "--> Error flashing $partition_name to slot B!"
    ui_print "    Press Vol+ to skip flashing this partition and continue,"
    ui_print "    Press Vol- to abort the entire script."
    chooseport
    if [ $? -ne 0 ]; then
      abort "Aborting script due to slot B partition flashing error and user choice."
    else
      ui_print "--> Continuing to flashing the next partition despite slot B error..."
      return 0
    fi
  fi

  ui_print "  $partition_name flashed successfully to both slots."
}

# Define partition lists
firmware_partitions="abl aop aop_config bluetooth cpucp devcfg dsp featenabler hyp imagefv keymaster modem multiimgoem multiimgqti qupfw qweslicstore shrm tz uefi uefisecapp xbl xbl_config xbl_ramdump"
misc_partitions="boot dtbo vendor_boot vbmeta_vendor vbmeta_system"

# Firmware partition images
ui_print " "
ui_print "Flashing Nothing OS firmware partitions..."
for partition in $firmware_partitions; do
  flash_partition $partition ${partition}.img
done
ui_print "Firmware flashing complete!"

# Misc partition images
ui_print " "
ui_print "Flashing miscellaneous partitions..."
for partition in $misc_partitions; do
  flash_partition $partition ${partition}.img
done
ui_print "Miscellaneous partition flashing complete!"

# Cleanup tmp dir
rm -rf /dev/tmp

# Final instruction
ui_print " "
ui_print "If you want to flash a new ROM do that now before rebooting."
ui_print "NothingMuchROM users may also flash super and vbmeta (optional)."

exit 0
